{"version":3,"sources":["assets/react-logo.png","components/header/Header.js","services/sessionStorage.js","router/PrivateRouter.js","router/PublicRouter.js","redux/actions/userActions.js","redux/types/userTypes.js","components/forms/shemas/shemaLogin.js","services/userServices.js","components/forms/FormLogin.js","views/Login.js","components/card/CardGif.js","services/conecction.js","services/gifServices.js","redux/actions/gifActions.js","redux/types/gifTypes.js","components/footer/Footer.js","views/ListGif.js","router/AppRouter.js","redux/reducer/gifReducer.js/gifReducer.js","redux/reducer/userReducer.js/userReducer.js","redux/reducer/index.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","header","height","Header","classes","className","getToken","sessionStorage","getItem","PrivateRoute","Component","component","rest","token","render","props","to","PublicRouter","setToken","dispatch","type","payload","LoginShema","Yup","shape","email","max","required","password","min","INITIAL_VALUES_LOGIN","fakeLogin","formData","Promise","resolve","reject","setTimeout","setItem","status","theme","backdrop","zIndex","drawer","color","mapDispatchToProps","userActions","connect","history","useHistory","useState","isLoading","setIsLoading","errorLogin","setErrorLogin","handleLogin","userLogin","a","login","hasOwnProperty","replace","Backdrop","open","CircularProgress","validationSchema","initialValues","onSubmit","handleChange","values","errors","touched","TextField","fullWidth","error","label","placeholder","variant","helperText","name","onChange","value","style","paddingBottom","InputProps","startAdornment","InputAdornment","position","Collapse","in","Alert","severity","action","IconButton","aria-label","size","onClick","fontSize","Button","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","imageBg","width","imageBgArea","background","display","justifyContent","alignItems","imageBgXs","opacity","formArea","flex","Login","Grid","container","item","xs","sm","src","BackgroundLogin","alt","Container","maxWidth","Card","CardHeader","title","CardContent","cardContent","cardFotter","CardGif","gif","heightImage","CardMedia","image","images","original","url","Typography","gutterBottom","CardActions","username","defaultProps","instanceAxios","axios","create","baseURL","base_url","interceptors","request","use","Qs","stringify","haderDefault","arrayFormat","response","data","get","path","params","post","headers","put","patch","delete","getTrendingServices","offset","trending","instance","result","moreGifAction","handleGetTrending","gifAction","state","gridContainer","marginTop","gifReducer","useEffect","list","map","index","md","lg","key","user","userReducer","basename","exact","ListGif","INITIAL_STATE","moreData","newState","length","combineReducers","store","createStore","reducer","applyMiddleware","reduxThunk","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf162da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.2a485c25.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        \"background\": \"black\",\r\n        \"background-image\": \"url(https://developers.giphy.com/static/img/dev-logo-lg.7404c00322a8.gif)\",\r\n        \"background-size\": \"auto\",\r\n        height: \"70px\",\r\n        \"background-repeat\": \"no-repeat\",\r\n        \"background-position-y\": \"center\",\r\n        \"background-position-x\": \"center\",\r\n        \"width\": \"100%\"\r\n    },\r\n  });\r\n\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <section className={classes.header} >\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nexport const getToken = () => {\r\n    return sessionStorage.getItem(\"token\");\r\n}\r\n\r\nexport const setToken = (token) => {\r\n    sessionStorage.setItem(\"token\", token);\r\n}\r\n\r\nexport const deleteToken = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getToken } from 'services/sessionStorage';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const token = getToken();\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (\r\n                token\r\n                    ? <Component {...props} {...rest} />\r\n                    : <Redirect to='/login' />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getToken } from 'services/sessionStorage';\r\n\r\n\r\nconst PublicRouter = ({ component: Component, ...rest }) => {\r\n    const token = getToken();\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (\r\n                !token\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/' />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PublicRouter;","import { SET_TOKEN } from \"redux/types/userTypes\"\r\n\r\nexport const setToken = (token) => (dispatch) =>  {\r\n    return dispatch({\r\n        type: SET_TOKEN,\r\n        payload: token\r\n    })\r\n}","\r\nexport const SET_TOKEN = \"set_token\";","import * as Yup from \"yup\";\r\n\r\nexport const LoginShema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"Ingrese un email valido\")\r\n        .max(50, \"Maximo 50 caracteres\")\r\n        .required(\"Este campo es requerido\"),\r\n\r\n    password: Yup.string()\r\n        .min(4, \"Mínimo 2 caracteres\")\r\n        .max(30, \"Maximo 40 caracteres\")\r\n        .required(\"Este campo es requerido\"),\r\n});\r\n\r\nexport const INITIAL_VALUES_LOGIN = {\r\n    email: \"\",\r\n    password: \"\"\r\n};\r\n","import { setToken } from \"./sessionStorage\";\r\n\r\nexport const fakeLogin = (formData) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if ( formData.email == \"admin@admin.com\" && formData.password == \"admin\" ) {\r\n                const tokenFake = \"fakeToken\";\r\n                setToken(tokenFake);\r\n                return resolve({status: \"ok\", token: tokenFake})\r\n            } else {\r\n                return resolve({status: \"error\"})\r\n            }\r\n\r\n        }, 500);\r\n    });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"redux/actions/userActions\";\r\n\r\n// formulario\r\nimport { Formik, Form } from \"formik\";\r\nimport { LoginShema, INITIAL_VALUES_LOGIN } from \"./shemas/shemaLogin\";\r\nimport { fakeLogin } from \"services/userServices\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: \"#7E88C1\",\r\n    },\r\n}));\r\n\r\nconst FormLogin = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorLogin, setErrorLogin] = useState(false);\r\n\r\n    const handleLogin = async (userLogin) => {\r\n        setIsLoading(true);\r\n        const login = await fakeLogin(userLogin);\r\n        setIsLoading(false);\r\n        if (login.hasOwnProperty(\"token\")) {\r\n            props.setToken(login.token);\r\n            history.replace(\"/\");\r\n        }\r\n        setErrorLogin(true);\r\n        return;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Backdrop className={classes.backdrop} open={isLoading}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Formik\r\n                validationSchema={LoginShema}\r\n                initialValues={INITIAL_VALUES_LOGIN}\r\n                onSubmit={handleLogin}\r\n                render={({ handleChange, values, errors, touched }) => {\r\n                    return (\r\n                        <Form>\r\n                            <TextField\r\n                                fullWidth\r\n                                error={errors.email && touched.email}\r\n                                label=\"Usuario\"\r\n                                type=\"email\"\r\n                                placeholder=\"Ingrese su usuario\"\r\n                                variant=\"outlined\"\r\n                                helperText={errors.email}\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                value={values.email}\r\n                                style={{ paddingBottom: \"2em\" }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AccountCircle />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                error={errors.password && touched.password}\r\n                                label=\"Contraseña\"\r\n                                type=\"password\"\r\n                                placeholder=\"Ingrese su contraseña\"\r\n                                variant=\"outlined\"\r\n                                helperText={errors.password}\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                value={values.password}\r\n                                style={{ paddingBottom: \"2em\" }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LockIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n\r\n                            <Collapse\r\n                                in={errorLogin}\r\n                                style={{ paddingBottom: \"2em\" }}\r\n                            >\r\n                                <Alert\r\n                                    severity=\"error\"\r\n                                    action={\r\n                                        <IconButton\r\n                                            aria-label=\"close\"\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setErrorLogin(false);\r\n                                            }}\r\n                                        >\r\n                                            <CloseIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n                                    }\r\n                                >\r\n                                    Usuario o contraseña incorrectas :(\r\n                                </Alert>\r\n                            </Collapse>\r\n\r\n                            <Button\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    ...userActions,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FormLogin);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport FormLogin from \"components/forms/FormLogin\";\r\nimport BackgroundLogin from \"../assets/react-logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    imageBg: {\r\n        width: \"100%\",\r\n    },\r\n    imageBgArea: {\r\n        background: \"#7E88C1\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        \"@media only screen and (max-width: 599px)\": {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    imageBgXs: {\r\n        display: \"none\",\r\n        \"@media only screen and (max-width: 599px)\": {\r\n            display: \"block\",\r\n            position: \"absolute\",\r\n            opacity: \".4\",\r\n        },\r\n    },\r\n    formArea: {\r\n        background: \"#7d728a2b\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n        \"@media only screen and (max-width: 599px)\": {\r\n            background: \"#7E88C1\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} sm={7} className={classes.imageBgArea}>\r\n                <img\r\n                    src={BackgroundLogin}\r\n                    alt=\"background\"\r\n                    className={classes.imageBg}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={5} className={classes.formArea}>\r\n                <Container maxWidth=\"md\">\r\n                    <Card className={classes.root}>\r\n                        <CardHeader title=\"Inicia sesion\" />\r\n                        <CardContent>\r\n                            <FormLogin />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst useStyles = makeStyles({\r\n    cardContent : {\r\n        height: \"50px\"\r\n    },\r\n    cardFotter: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nconst CardGif = ({gif, heightImage}) => {\r\n    const classes = useStyles();\r\n\r\n    return !gif ? null : (\r\n        <Card>\r\n            <CardMedia\r\n                component=\"img\"\r\n                alt={gif.title}\r\n                height={heightImage}\r\n                image={gif.images.original.url}\r\n                title={gif.title}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom component=\"p\">\r\n                    {gif.title}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions >\r\n                <div className={classes.cardFotter}>\r\n                    <PersonIcon />\r\n                    <Typography component=\"span\">\r\n                        {gif.username || \"giphy\"}\r\n                    </Typography>\r\n                </div>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nCardGif.defaultProps = {\r\n    heightImage: \"140\"\r\n}\r\n\r\nCardGif.propTypes = {\r\n    gif: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CardGif\r\n","import axios from \"axios\";\r\nimport { base_url, headers as haderDefault } from \"../config/config.json\"\r\nimport Qs from \"query-string\";\r\n\r\nconst instanceAxios = axios.create({\r\n    baseURL: base_url\r\n});\r\n\r\n\r\ninstanceAxios.interceptors.request.use(request => {\r\n    request.url += `?${Qs.stringify(haderDefault, {arrayFormat: 'brackets'})}`;\r\n        \r\n    return request;\r\n});\r\n\r\n\r\ninstanceAxios.interceptors.response.use(response => {\r\n    return response;\r\n},\r\n    (error) => {\r\n        if (!error.response) {\r\n            return { data: { data: null }, status: 500 }\r\n        }\r\n        return error.response;\r\n    }\r\n);\r\n\r\nexport default {\r\n\r\n    get: async (path, params) => {\r\n        return await instanceAxios.get(`${path}`, { params });\r\n    },\r\n\r\n    post: async (path, data, headers = haderDefault) => {\r\n        return await instanceAxios.post(`/${path}`, data, { headers });\r\n    },\r\n\r\n    put: async (path, data, headers = haderDefault) => {\r\n        return await instanceAxios.put(`/${path}`, data, { headers });\r\n    },\r\n\r\n    patch: async (path, data, headers = haderDefault) => {\r\n        return await instanceAxios.patch(`/${path}`, data, { headers });\r\n    },\r\n\r\n    delete: (path) => {\r\n        return instanceAxios.delete(path)\r\n    }\r\n\r\n}\r\n\r\n","import instance from \"./conecction\";\r\n\r\n\r\nexport const getRandomGif = async () => {\r\n    const random = \"random\";\r\n    const result = await instance.get(random);\r\n\r\n    return result;\r\n}\r\n\r\nexport const getTrendingServices = async (offset = 0) => {\r\n    const trending = \"trending\";\r\n    const result = await instance.get(trending, {offset});\r\n\r\n    return result;\r\n}\r\n","import { MORE_DATA } from \"redux/types/gifTypes\"\r\nimport { getTrendingServices } from \"services/gifServices\";\r\n\r\nexport const moreGifAction = (offset) => async (dispatch) => {\r\n    const result = await handleGetTrending(offset);\r\n    return dispatch({\r\n        type: MORE_DATA,\r\n        payload: result\r\n    })\r\n}\r\n\r\nconst handleGetTrending = async (offset) => {\r\n    const { data } = await getTrendingServices(offset);\r\n    return data.data\r\n}","\r\nexport const MORE_DATA = \"more_data\";\r\n","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport { connect } from \"react-redux\";\r\nimport * as gifAction from \"redux/actions/gifActions\";\r\n\r\nconst useStyles = makeStyles({\r\n    container : {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nconst Footer = (props) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleMoreData = () => {\r\n        const {offset} = props.state;\r\n        props.moreGifAction(offset);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"buttom\"\r\n                onClick={handleMoreData}\r\n            >\r\n                Load More\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    ...gifAction\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer)\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardGif from 'components/card/CardGif';\r\nimport { Grid } from '@material-ui/core';\r\nimport Footer from 'components/footer/Footer';\r\nimport { connect } from \"react-redux\";\r\nimport * as gifAction from \"redux/actions/gifActions\";\r\n\r\nconst useStyles = makeStyles({\r\n    gridContainer : {\r\n        marginTop: \"4em\"\r\n    },\r\n    container : {\r\n        paddingBottom : \"1em\"\r\n    }\r\n});\r\n\r\nconst ListGif = (props) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        props.moreGifAction(props.state.offset);\r\n    }, []);\r\n\r\n    return !props.state.list ? null : (\r\n        <Container className={classes.container} >\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                {\r\n                    props.state.list.map((gif, index) => (\r\n                        <Grid item xs={6} sm={4} md={3} lg={3} key={`gif-${index}`} >\r\n                            <CardGif gif={gif} />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n            <Footer />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({gifReducer}) => {\r\n    return {\r\n        state: gifReducer\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    ...gifAction\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListGif);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from \"components/header/Header\";\r\nimport PrivateRoute from \"./PrivateRouter\";\r\nimport PublicRouter from \"./PublicRouter\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Login from \"views/Login\";\r\nimport ListGif from \"views/ListGif\";\r\n\r\nconst AppRouter = (props) => {\r\n    const handleShowHeader = () => {\r\n        if (props.user.token) {\r\n            return <Header />;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <Router basename=\"/gif_spa\">\r\n            {handleShowHeader()}\r\n            <Switch>\r\n                <PublicRouter exact path={\"/login\"} component={Login} />\r\n                <PrivateRoute exact path={\"/\"} component={ListGif} />\r\n\r\n                <Redirect to=\"/login\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ userReducer }) => {\r\n    return {\r\n        user: userReducer,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppRouter);\r\n","import { MORE_DATA } from \"redux/types/gifTypes\";\r\n\r\n\r\nexport const INITIAL_STATE = { \r\n    offset: 0,\r\n    list: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case MORE_DATA:\r\n            return moreData(state, action);\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst moreData = (state, { payload }) => {\r\n    let newState = { ...state };\r\n    if ( !!newState.list ) {\r\n        newState.list = [...newState.list, ...payload];\r\n    } else {\r\n        newState.list = payload;\r\n    }\r\n    newState.offset = newState.list.length + 1;\r\n\r\n    return newState;\r\n}","import { SET_TOKEN } from \"redux/types/userTypes\";\r\nimport { getToken } from \"services/sessionStorage\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    token: getToken() || null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_TOKEN:\r\n            return { token: action.payload }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport gifReducer from \"redux/reducer/gifReducer.js/gifReducer\";\r\nimport userReducer from \"redux/reducer/userReducer.js/userReducer\"\r\n\r\nexport default combineReducers({\r\n    gifReducer,\r\n    userReducer\r\n});","import React from 'react';\r\nimport AppRouter from 'router/AppRouter';\r\n// redux\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"redux/reducer\" ;\r\nimport { INITIAL_STATE } from 'redux/reducer/gifReducer.js/gifReducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  INITIAL_STATE,\r\n  applyMiddleware(reduxThunk)\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}